{
  "env": {
    "browser": true,
    "es6": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly",
    "process": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": [
    "react",
    "react-hooks"
  ],
  "rules": {
    //    "@typescript-eslint/no-debugger": "off",
    "@typescript-eslint/unbound-method": "off",
    "react/prop-types": "off",
    //    "@typescript-eslint/eslint-recommended/no-debugger": "off",
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "none",
          // 'none' or 'semi' or 'comma'
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          // 'semi' or 'comma'
          "requireLast": false
        }
      }
    ]
    //      "react/no-access-state-in-setstate": "error", // Prevent using this.state inside this.setState
    //      "react/no-danger": "error", // Prevent usage of dangerous JSX properties
    //      "react/no-multi-comp": "error", // Prevent multiple component definition per file
    //      "react/no-this-in-sfc": "error", // Prevent using this in stateless functional components
    //      "react/prefer-stateless-function": "error", // Enforce stateless React Components to be written as a pure function
    //      "react/jsx-filename-extension": ["error", { "extensions": [".tsx"] }],
    //      "react/jsx-no-bind": "error", // Prevent usage of .bind() and arrow functions in JSX props
    //      "react/jsx-no-literals": "warn", //  Prevent usage of unwrapped JSX strings
    //      "react/jsx-no-useless-fragment": "error", // Disallow unnecessary fragments,
    //      "react/jsx-pascal-case": "error", // Enforce PascalCase for user-defined JSX components
    //      "react-hooks/rules-of-hooks": "error",
    //      "react-hooks/exhaustive-deps": "warn"
  }
}
